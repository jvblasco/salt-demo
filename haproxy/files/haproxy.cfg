{%- from 'haproxy/map.jinja' import haproxy_settings with context -%}
##################################
# **** DO NOT EDIT THIS FILE ****
# This file is managed by Salt
# Any changes will be overwritten
##################################

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # log /dev/log    local0
    # log /dev/log    local1 notice
    user haproxy
    group haproxy
    tune.bufsize {{ haproxy_settings.bufsize }}
    tune.http.maxhdr {{ haproxy_settings.httpmaxhdr }}
    chroot  /var/lib/haproxy
    daemon

    #Stats support is currently limited to socket mode
    stats socket /run/haproxy/admin.sock mode 660 level admin

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    # log global
    mode http
    retries 3
    # option httplog
    option dontlognull
    option redispatch

    timeout server          5m
    timeout client          1m
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout http-keep-alive 10s
    timeout check           10s
    timeout tunnel          1h

    errorfile 408 /dev/null

#---------------------------------------------------------------------
# frontend instances
#---------------------------------------------------------------------
frontend www-http
    bind 127.0.0.1:10080
    default_backend apps-cluster

#---------------------------------------------------------------------
# backend instances
#---------------------------------------------------------------------
backend apps-cluster
    balance roundrobin
    option http-server-close
    option httpclose
    option forwardfor    except 127.0.0.0/8
    # option httplog
{%- if haproxy_settings.sticky_sessions %}
    cookie frontserver insert indirect
{%- endif %}
    stats enable
    stats realm SebafactoryBalancer
    stats uri {{ haproxy_settings.stats.uri }}
    stats auth {{ haproxy_settings.stats.user }}:{{ haproxy_settings.stats.password }}
{%- for frontend, ip in haproxy_settings.frontends.items() %}
{%- if haproxy_settings.sticky_sessions %}
    server {{ frontend }} {{ ip }}:80 check maxconn 1000 weight 100 cookie {{ frontend }} inter 2000
{%- else %}
    server {{ frontend }} {{ ip }}:80 check maxconn 1000 weight 100 inter 2000
{%- endif %}
{%- endfor %}
